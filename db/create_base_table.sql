-- Prerequisites:
-- - A user of this SQL script must be admin user
CREATE ROLE lot_server_user WITH NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT LOGIN NOREPLICATION NOBYPASSRLS PASSWORD 'y2.QX_GrVce.iJWL';

CREATE DATABASE lot OWNER lot_server_user TABLESPACE pg_default

CREATE SCHEMA IF NOT EXISTS lot AUTHORIZATION lot_server_user;

SET SCHEMA
  'lot';

CREATE TABLE IF NOT EXISTS items (
  id INT GENERATED BY DEFAULT AS IDENTITY,
  -- user ID
  owner_id VARCHAR(100) NOT NULL,
  name VARCHAR(250) NOT NULL,
  alias VARCHAR(250),
  description VARCHAR(500),
  added_at TIMESTAMP NOT NULL,
  updated_at TIMESTAMP NOT NULL,
  purchased_at TIMESTAMP NOT NULL,
  value INT NOT NULL,
  current_value INT NOT NULL,
  currency_code VARCHAR(20) NOT NULL,
  -- seconds
  life_span BIGINT NOT NULL,
  is_favorite BOOLEAN NOT NULL DEFAULT false,
  is_archived BOOLEAN NOT NULL DEFAULT false,
  PRIMARY KEY (id, owner_id)
);

CREATE TABLE IF NOT EXISTS tags (
  id INT GENERATED BY DEFAULT AS IDENTITY,
  owner_id VARCHAR(100) NOT NULL,
  name VARCHAR(250) NOT NULL,
  PRIMARY KEY (id, owner_id)
);

CREATE TABLE IF NOT EXISTS items_to_tags (
  owner_id VARCHAR(100) NOT NULL,
  item_id INT NOT NULL,
  tag_id INT NOT NULL,
  PRIMARY KEY (owner_id, item_id, tag_id)
);

CREATE TABLE IF NOT EXISTS preferences (
  user_id VARCHAR(100) NOT NULL,
  currency_code VARCHAR(20) NOT NULL,
  language_code VARCHAR(10) NOT NULL,
  PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS refresh_token (
  user_id VARCHAR(100) NOT NULL,
  refresh_token VARCHAR(128) NOT NULL,
  user_agent VARCHAR(128) NOT NULL,
  valid_from BIGINT NOT NULL,
  valid_to BIGINT NOT NULL,
  PRIMARY KEY (user_id, refresh_token)
);

GRANT
SELECT
  ON TABLE lot.items TO lot_server_user;

GRANT
INSERT
  ON TABLE lot.items TO lot_server_user;

GRANT
UPDATE
  ON TABLE lot.items TO lot_server_user;

GRANT DELETE ON TABLE lot.items TO lot_server_user;

GRANT
SELECT
  ON TABLE lot.tags TO lot_server_user;

GRANT
INSERT
  ON TABLE lot.tags TO lot_server_user;

GRANT
UPDATE
  ON TABLE lot.tags TO lot_server_user;

GRANT DELETE ON TABLE lot.tags TO lot_server_user;

GRANT
SELECT
  ON TABLE lot.items_to_tags TO lot_server_user;

GRANT
INSERT
  ON TABLE lot.items_to_tags TO lot_server_user;

GRANT
UPDATE
  ON TABLE lot.items_to_tags TO lot_server_user;

GRANT DELETE ON TABLE lot.items_to_tags TO lot_server_user;

GRANT
SELECT
  ON TABLE lot.preferences TO lot_server_user;

GRANT
INSERT
  ON TABLE lot.preferences TO lot_server_user;

GRANT
UPDATE
  ON TABLE lot.preferences TO lot_server_user;

GRANT DELETE ON TABLE lot.preferences TO lot_server_user;

GRANT
SELECT
  ON TABLE lot.refresh_token TO lot_server_user;

GRANT
INSERT
  ON TABLE lot.refresh_token TO lot_server_user;

GRANT
UPDATE
  ON TABLE lot.refresh_token TO lot_server_user;

GRANT DELETE ON TABLE lot.refresh_token TO lot_server_user;
